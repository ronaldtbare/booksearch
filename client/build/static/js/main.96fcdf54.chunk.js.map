{"version":3,"sources":["components/Search.js","utils/API.js","components/ResultBook.js","components/ResultsList.js","components/SavedBook.js","components/SavedBooksList.js","components/Jumbotron.js","components/Nav.js","App.js","registerServiceWorker.js","index.js"],"names":["Search","state","searchTerm","onChangeHandler","e","preventDefault","_this","setState","target","value","submitHandler","props","history","push","concat","react_default","a","createElement","className","type","onChange","this","id","aria-describedby","placeholder","onClick","React","Component","API","bookID","axios","delete","bookData","post","ResultBook","_ref","title","subtitle","authors","cover","previewLink","description","handleClick","href","role","src","alt","ResultsList","books","console","log","bookdata","filter","book","_this2","fetch","match","params","then","response","json","data","items","catch","error","fetchBooks","_this3","map","el","components_ResultBook","volumeInfo","imageLinks","thumbnail","apply","arguments","SavedBook","deleteBook","SavedBooksList","Object","objectSpread","_id","components_SavedBook","Jumbotron","Nav","react_router_dom","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","activeClassName","App","components_Nav","components_Jumbotron","react_router","path","component","exact","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.96fcdf54.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass Search extends React.Component {\r\n    state = { searchTerm: ''};\r\n\r\n    onChangeHandler = e => {\r\n        e.preventDefault();\r\n        this.setState({ searchTerm: e.target.value });\r\n    }\r\n\r\n    submitHandler = e => {\r\n        e.preventDefault();\r\n        this.props.history.push(`/search/${this.state.searchTerm}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"search\">\r\n                <h1>Book Search</h1>\r\n                <form>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" onChange={this.onChangeHandler} value={this.state.searchTerm} className=\"form-control\" id=\"search\" aria-describedby=\"searchHelp\" placeholder=\"Enter a search term.\"/>\r\n                    </div>\r\n                    <button onClick={this.submitHandler} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import axios from \"axios\";\n\nexport const API = {\n  \n  // Deletes the book with the given id\n  deleteBook: function(bookID) {\n    return axios.delete(`/deletebook/${bookID}`);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/savebook\", bookData);\n  },\n\n  // grabs books from the database\n  getBookList: function(){\n    return axios.get(\"/bookList\");\n  }\n  \n};\n","import React from \"react\";\r\nimport \"../App.css\";\r\nimport {API} from \"../utils/API.js\";\r\n\r\nfunction ResultBook({ title, subtitle, authors, cover, previewLink, description, handleClick }) {\r\n     \r\n    \r\n    return (\r\n        <div className=\"savedbook\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h2>{title}</h2>\r\n                        <h4>{subtitle}</h4>\r\n                        <h5>Author: {authors}</h5>                    \r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <a className=\"btn btn-primary\" href={previewLink} target=\"_blank\" role=\"button\">View</a>\r\n                        <a className=\"btn btn-primary\" onClick={() => handleClick(title, subtitle, authors, cover, previewLink, description, handleClick)} role=\"button\">Save</a>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <img src ={cover} alt=\"book cover pic\"/>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <p className=\"synopsis\">{description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultBook;","import React from \"react\";\r\nimport \"../App.css\";\r\nimport ResultBook from \"./ResultBook.js\";\r\nimport { API } from \"../utils/API.js\";\r\n\r\nclass ResultsList extends React.Component {\r\n    state = { books: [] };\r\n\r\n    handleClick(title, subtitle, authors, cover, description, previewLink) {\r\n        console.log(\"TRYING TO SAVE BOOK\")\r\n        const bookdata = {\r\n            title,\r\n            subtitle: subtitle,\r\n            authors,\r\n            cover,\r\n            description,\r\n            previewLink\r\n        }\r\n        console.log(\"bookdata is: \", bookdata)\r\n\r\n        API.saveBook(bookdata);\r\n        this.setState({books: this.state.books.filter(book => book.title !== title)})\r\n    }\r\n\r\n    fetchBooks() {\r\n        console.log(\"FETCHED BOOKS!!!!!!!!!\")\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=${this.props.match.params.searchTerm}`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ books: data.items }))\r\n            .then(data => console.log(data.items))\r\n            .catch(error => console.log);\r\n    }\r\n    \r\n    componentWillMount() {\r\n        this.fetchBooks();  \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"results\">\r\n                <h2>Results for \"{this.props.match.params.searchTerm}\"</h2>\r\n                <div>\r\n                    {this.state.books.map(el => <ResultBook \r\n                    title={el.volumeInfo.title}\r\n                    subtitle={el.volumeInfo.subtitle}\r\n                    authors={el.volumeInfo.authors}\r\n                    cover={el.volumeInfo.imageLinks.thumbnail}\r\n                    description={el.volumeInfo.description}\r\n                    previewLink={el.volumeInfo.previewLink}\r\n                    handleClick={(...b) => this.handleClick(...b)}\r\n                    />)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultsList;","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\n\r\n\r\nfunction SavedBook({title, subtitle, authors, cover, previewLink, description,bookID, deleteBook}) {\r\n\r\n    \r\n\r\n    return (\r\n        <div className=\"savedbook\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <h2>{title}</h2>\r\n                        <h4>{subtitle}</h4>\r\n                        <h5>Author:{authors}</h5>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <a className=\"btn btn-primary\" href={previewLink} target=\"_blank\" role=\"button\">View</a>\r\n                        <a className=\"btn btn-primary\" onClick={()=>deleteBook(bookID)} role=\"button\">Delete</a>                      \r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm\">\r\n                        <img src= {cover} alt=\"book cover pic\" />\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <p className=\"synopsis\">{description}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SavedBook;","import React from \"react\";\r\nimport SavedBook from \"./SavedBook.js\";\r\nimport { API } from \"../utils/API.js\";\r\nimport \"../App.css\";\r\n  \r\nclass SavedBooksList extends React.Component {\r\n    state = { books: [] };\r\n\r\n    deleteBook(bookID) {\r\n        console.log(bookID);\r\n        API.deleteBook(bookID);\r\n        // console.log(\"previous state: \", this.state.books)\r\n        // console.log(\"filtered array: \", this.state.books.filter(book => book._id !== bookID))\r\n        this.setState({ ...this.state, books: this.state.books.filter(book => book._id !== bookID)})\r\n        // console.log(\"updated state: \", this.state.books)\r\n    }\r\n\r\n    fetchBooks() {\r\n        fetch(`/booklist`)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ books: data }))\r\n            .then(data => console.log)\r\n            .catch(error => console.log);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.fetchBooks()\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"results\">\r\n                <h2>Saved Books List</h2>\r\n                <div>\r\n                    {this.state.books.map(el => <SavedBook\r\n                        title={el.title}\r\n                        subtitle={el.subtitle}\r\n                        authors={el.authors}\r\n                        cover={el.cover}\r\n                        description={el.description}\r\n                        previewLink={el.previewLink}\r\n                        bookID={el._id}\r\n                        deleteBook={(bookID)=>this.deleteBook(bookID)}\r\n                    />)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SavedBooksList;","import React from \"react\";\r\n\r\nimport \"../App.css\";\r\n\r\n    function Jumbotron() {\r\n\r\n        return (\r\n            <div className=\"jumbotron bgimage\">\r\n                <h1 className=\"display-4 color-white\">(React) Google Books Search</h1>\r\n                <p className=\"lead color-white\">Search for and Save Books of Interest.</p>\r\n                <hr className=\"my-4\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\nexport default Jumbotron;\r\n    ","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link to=\"/\" className=\"navbar-brand\">Google Books</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                    <NavLink activeClassName=\"active\" to=\"/search\" className=\"nav-item nav-link\">Search <span className=\"sr-only\">(current)</span></NavLink>\r\n                    <NavLink activeClassName=\"active\" to=\"/save\" className=\"nav-item nav-link\">Saved Books <span className=\"sr-only\">(current)</span></NavLink>\r\n                </div>\r\n            </div>\r\n            \r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport Search from \"./components/Search.js\";\nimport ResultsList from \"./components/ResultsList.js\";\nimport SavedBooksList from \"./components/SavedBooksList.js\";\n\nimport Jumbotron from \"./components/Jumbotron.js\";\nimport Nav from \"./components/Nav.js\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Nav />\n          <Jumbotron/>\n          <hr />\n          <switch>\n            <Route path=\"/\" component={Search} exact/>\n            <Route path=\"/search\" component={Search} exact/>\n            <Route path=\"/search/:searchTerm\" component={ResultsList} exact />\n            <Route path=\"/save\" component={SavedBooksList} />\n          </switch>\n        </div>\n      </BrowserRouter>\n        \n          \n        \n\n      \n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}